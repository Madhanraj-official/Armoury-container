#!/bin/sh
# SPDX-License-Identifier: GPL-3.0-only

# Defaults
no_color=0

set -o errexit
set -o nounset

		container_manager="podman"



# prepend sudo (or the specified sudo program) if we want our container manager to be rootful

# List containers using custom format that included MOUNTS
# we do this as we can detect the custom mounts done by distrobox to distringuish
# between a normal container and a distrobox one.
container_list=$(${container_manager} ps -a --no-trunc --format \
	"{{.ID}}|{{.Image}}|{{.Names}}|{{.Status}}|{{.Labels}}{{.Mounts}}")
printf "%-12s | %-20s | %-18s | %-30s\n" \
	"ID" "NAME" "STATUS" "IMAGE"
IFS='
'

# if we're in not a tty, don't use colors
GREEN=""
YELLOW=""
CLEAR=""
if [ -t 0 ] && [ -t 1 ] && [ "${no_color}" -ne 1 ]; then
	# we're in a tty, use colors
	GREEN='\033[32m'
	YELLOW='\033[33m'
	CLEAR='\033[0m'
fi
# Header of the output
for container in ${container_list}; do
	# Check if the current container has a custom mount point for distrobox.
	if [ -z "${container##*distrobox*}" ]; then

		# Extract the information for the single container to pretty print it
		container_id="$(printf "%s" "${container}" | cut -d'|' -f1 | cut -c1-12)"
		container_image="$(printf "%s" "${container}" | cut -d'|' -f2)"
		container_name="$(printf "%s" "${container}" | cut -d'|' -f3)"
		container_status="$(printf "%s" "${container}" | cut -d'|' -f4)"

		IFS=' '

		# If the container is Up and Running, print it in green and go next.
		if [ -z "${container_status##*Up*}" ] || [ -z "${container_status##*running*}" ]; then
			# echo -e is not defined in posix, and printing with %s will not work
			# for colors, so we're disabling this lint for color prints.
			# shellcheck disable=SC2059
			printf "${GREEN}"
		else
			# shellcheck disable=SC2059
			printf "${YELLOW}"
		fi
		# print it in yellow if not Running
		printf "%-12s | %-20s | %-18s | %-30s" \
			"${container_id}" "${container_name}" "${container_status}" "${container_image}"

		# shellcheck disable=SC2059
		printf "${CLEAR}\n"
	fi
done
